From 4af188470ea5c57d416ac9ff670cebb40619029e Mon Sep 17 00:00:00 2001
From: Xiaoyao Li <xiaoyao.li@intel.com>
Date: Mon, 14 Aug 2023 07:30:24 -0400
Subject: [PATCH 083/101] Revert "i386/tdx: Limit the range size for MapGPA"

This reverts commit 59cf75120051a9a8e6c7cc15312b8b6c513d5b08.
---
 target/i386/kvm/tdx.c | 19 +------------------
 1 file changed, 1 insertion(+), 18 deletions(-)

diff --git a/target/i386/kvm/tdx.c b/target/i386/kvm/tdx.c
index 560780db91..82c6e852a2 100644
--- a/target/i386/kvm/tdx.c
+++ b/target/i386/kvm/tdx.c
@@ -1013,16 +1013,12 @@ static hwaddr tdx_shared_bit(X86CPU *cpu)
     return (cpu->phys_bits > 48) ? BIT_ULL(51) : BIT_ULL(47);
 }
 
-/* 64MB at most in one call. What value is appropriate? */
-#define TDX_MAP_GPA_MAX_LEN     (64 * 1024 * 1024)
-
 static void tdx_handle_map_gpa(X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
 {
     hwaddr shared_bit = tdx_shared_bit(cpu);
     hwaddr gpa = vmcall->in_r12 & ~shared_bit;
     bool private = !(vmcall->in_r12 & shared_bit);
     hwaddr size = vmcall->in_r13;
-    bool retry = false;
     int ret = 0;
 
     vmcall->status_code = TDG_VP_VMCALL_INVALID_OPERAND;
@@ -1041,25 +1037,12 @@ static void tdx_handle_map_gpa(X86CPU *cpu, struct kvm_tdx_vmcall *vmcall)
         return;
     }
 
-    if (size > TDX_MAP_GPA_MAX_LEN) {
-        retry = true;
-        size = TDX_MAP_GPA_MAX_LEN;
-    }
-
     if (size > 0) {
         ret = kvm_convert_memory(gpa, size, private);
     }
 
     if (!ret) {
-        if (retry) {
-            vmcall->status_code = TDG_VP_VMCALL_RETRY;
-            vmcall->out_r11 = gpa + size;
-            if (!private) {
-                vmcall->out_r11 |= shared_bit;
-            }
-        } else {
-            vmcall->status_code = TDG_VP_VMCALL_SUCCESS;
-        }
+        vmcall->status_code = TDG_VP_VMCALL_SUCCESS;
     }
 }
 
-- 
2.39.2

